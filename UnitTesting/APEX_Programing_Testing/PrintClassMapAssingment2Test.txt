@isTest 
public class PrintClassMapAssingment2Test 
{
    @testSetup 
    static void setupDataForClassStudent() 
    {
        Class__c cls = new Class__c(Name = 'TestClass', MaxSize__c = 3, MyCount__c = 0);
        insert cls;
        List<Student__c> st = new List<Student__c>();
        for(Integer studentCount = 0;studentCount < 2;studentCount++) 
        {
            st.add(new Student__c(Name = 'TestStudent' + studentCount, LastName__c = 'Lastname' + studentCount, Class__c = cls.Id));
        }
        insert st;
    }
    @isTest 
    static void testStudentList_matchStudentListInClass_getSuccessRespond() 
    {
        Map<Class__c, Set<Student__c>> classStudentMap;
        Test.startTest();
        classStudentMap = PrintClassMap.listClassStudent();
        Test.stopTest();
        Set<Student__c> studentSet;
        for(Class__c key : classStudentMap.keySet())
        {
            studentSet = classStudentMap.get(key);
        }
        List<Student__c> stdnList = [SELECT Id, Name FROM Student__c WHERE Name LIKE '%TestStudent%'];
        System.assertEquals(1, classStudentMap.size());//Compare class size
        System.assertEquals(2, studentSet.size());//Compare student size
    }
}
